.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PTODO 1"
.TH PTODO 1 2025-01-03 "perl v5.40.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
todo \- a simple todo manager
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    todo [OPTIONS] DIRECTORY
\&
\&    Options:
\&        \-h, \-\-help       show this help message
\&        \-l, \-\-list       show the TODOs without updating TODO.md
\&        \-v, \-\-verbose    show each path before processing them
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fItodo\fR is a simple perl script that help managing your TODO in a project.
.PP
It takes a directory to analyze as argument and will generate a TODO.md at the root of that directory with the found TODO.
.PP
If a \fITODO.md\fR is already in the root of the directory, \fItodo\fR will update that file, eventually marking some TODO as completed if they are not found in any sub path.
.SH "PARENTLESS TODOs"
.IX Header "PARENTLESS TODOs"
TODOs with no filepath as parent will not be tracked, they require to be automatically added and marked as
done in TODO.md.
.SH PROCESS
.IX Header "PROCESS"
.IP \(bu 4
Check if there is a \fITODO.md\fR in the target directory. If yes, load it as a hash.
.IP \(bu 4
Loop recursively in the filesystem to find all file that are readable and less than 10Mb in size.
.Sp
When finding one, will loop through the lines of the file and capture all TODOs which can be in those formats:
.Sp
.Vb 5
\&    TODO something to do
\&    TODO  something to do
\&    TODO: something to do
\&    TODO:  something todo
\&    ...
.Ve
.Sp
Basically any amount of \fI:\fR or space can be added after the word \fITODO\fR.
.IP \(bu 4
Will loop through the TODOs in the \fITODO.md\fR if any, to see which TODOs to mark as done (if they are not found in the files we check earlier).
.Sp
But skip the parentless TODOs are those one cannot be tracked (no file to check).
.IP \(bu 4
Finally, the todo hash will be converted into a markdown TODO list and depending on the given options will update the \fITODO.md\fR or print it to STDOUT.
.Sp
By default \fItodo\fR will update \fITODO.md\fR and only show pending tasks to STDOUT.
.SH IGNORE
.IX Header "IGNORE"
If you add a \fI.todoignore\fR file at the root of the directory to analyse, \fItodo\fR will skip matching path(s).
.SH AUTHOR
.IX Header "AUTHOR"
4zv4l \fI4zv4l@protonmail.com\fR
